{"ast":null,"code":"var _jsxFileName = \"/Users/qlab/Documents/Forgerson/WebDev/Apps/forgerson-dev-next/components/Layout.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Nav from '../components/Nav';\nimport Hamburger from '../components/Hamburger';\nimport hamStyles from '../components/Hamburger.module.css';\nimport { useState } from 'react';\n\nfunction Layout(props) {\n  _s();\n\n  //NAV HAMBURGER\n  var _useState = useState(false),\n      toggleHamClass = _useState[0],\n      setHamClass = _useState[1]; //NAV\n\n\n  var _useState2 = useState(false),\n      displayNav = _useState2[0],\n      setDisplayNav = _useState2[1];\n\n  var _useState3 = useState({\n    display: \"none\"\n  }),\n      navStyle = _useState3[0],\n      setNavStyle = _useState3[1];\n\n  function toggleNav() {\n    if (toggleHamClass === true) {\n      setHamClass(false);\n      setDisplayNav(false);\n    } else {\n      setHamClass(true);\n      setDisplayNav(true);\n      setTimeout(function () {\n        setNavClass(\"navContainer fadein\");\n      }, 10);\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: \"layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, props.children), __jsx(Nav, {\n    navShow: navStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), __jsx(Hamburger, {\n    navIcon4: hamStyles.navIcon4,\n    hamContainer: hamStyles.hamContainer,\n    navBtnClass: openCloseNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(Layout, \"1wI+9I7q3mVWwr9ulU9eF73GqRY=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/qlab/Documents/Forgerson/WebDev/Apps/forgerson-dev-next/components/Layout.js"],"names":["Head","Nav","Hamburger","hamStyles","useState","Layout","props","toggleHamClass","setHamClass","displayNav","setDisplayNav","display","navStyle","setNavStyle","toggleNav","setTimeout","setNavClass","children","navIcon4","hamContainer","openCloseNav"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACnB;AADmB,kBAEmBF,QAAQ,CAAC,KAAD,CAF3B;AAAA,MAEZG,cAFY;AAAA,MAEIC,WAFJ,iBAInB;;;AAJmB,mBAKiBJ,QAAQ,CAAC,KAAD,CALzB;AAAA,MAKZK,UALY;AAAA,MAKAC,aALA;;AAAA,mBAMaN,QAAQ,CAAC;AAACO,IAAAA,OAAO,EAAE;AAAV,GAAD,CANrB;AAAA,MAMZC,QANY;AAAA,MAMFC,WANE;;AAQnB,WAASC,SAAT,GAAqB;AACjB,QAAIP,cAAc,KAAK,IAAvB,EAA6B;AAC3BC,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHD,MAGO;AACLF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAK,MAAAA,UAAU,CAAC,YAAM;AACfC,QAAAA,WAAW,CAAC,qBAAD,CAAX;AACD,OAFS,EAEP,EAFO,CAAV;AAGD;AACJ;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,KAAK,CAACW,QADX,CADJ,EAII,MAAC,GAAD;AAAK,IAAA,OAAO,EAAEL,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,MAAC,SAAD;AACE,IAAA,QAAQ,EAAET,SAAS,CAACe,QADtB;AAEE,IAAA,YAAY,EAAEf,SAAS,CAACgB,YAF1B;AAGE,IAAA,WAAW,EAAEC,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAaH;;GAlCQf,M;;KAAAA,M;AAoCT,eAAeA,MAAf","sourcesContent":["import Head from 'next/head';\nimport Nav from '../components/Nav'; \nimport Hamburger from '../components/Hamburger';\nimport hamStyles from '../components/Hamburger.module.css';\nimport {useState} from 'react'\n\nfunction Layout(props) {\n    //NAV HAMBURGER\n    const [toggleHamClass, setHamClass] = useState(false);\n\n    //NAV\n    const [displayNav, setDisplayNav] = useState(false);\n    const [navStyle, setNavStyle] = useState({display: \"none\"})\n\n    function toggleNav() {\n        if (toggleHamClass === true) {\n          setHamClass(false);\n          setDisplayNav(false);\n        } else {\n          setHamClass(true);\n          setDisplayNav(true);\n          setTimeout(() => {\n            setNavClass(\"navContainer fadein\");\n          }, 10)\n        }\n    }\n\n    return (\n        <div className=\"layout\">\n            <div>\n                {props.children}\n            </div>\n            <Nav navShow={navStyle}/>\n            <Hamburger \n              navIcon4={hamStyles.navIcon4}\n              hamContainer={hamStyles.hamContainer}\n              navBtnClass={openCloseNav}\n            />\n        </div>\n    );\n}\n\nexport default Layout;"]},"metadata":{},"sourceType":"module"}